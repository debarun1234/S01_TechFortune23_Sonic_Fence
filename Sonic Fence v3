/* Sonic Fence v3 - Working Progress.
Event details:
SJEC Mangalore | Hack to Future - Hackathon
Domain - Social Innovations
*/

#include <SoftwareSerial.h>

#define trigPin1 4 // define the trigger pin of the first ultrasound sensor
#define echoPin1 5 // define the echo pin of the first ultrasound sensor
#define trigPin2 6 // define the trigger pin of the second ultrasound sensor
#define echoPin2 7 // define the echo pin of the second ultrasound sensor
#define ledPin 9 // define the LED pin
#define buzzerPin 8 // define the buzzer pin

long duration1, distance1, duration2, distance2; // variables to store ultrasound sensor readings

void setup() {
  pinMode(trigPin1, OUTPUT);
  pinMode(echoPin1, INPUT);
  pinMode(trigPin2, OUTPUT);
  pinMode(echoPin2, INPUT);
  pinMode(ledPin, OUTPUT);
  pinMode(buzzerPin, OUTPUT);
}

void loop() {
  // measure the distance using the first ultrasound sensor
  digitalWrite(trigPin1, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin1, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin1, LOW);
  duration1 = pulseIn(echoPin1, HIGH);
  distance1 = duration1 * 0.034 / 2;
  // measure the distance using the second ultrasound sensor
  digitalWrite(trigPin2, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin2, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin2, LOW);
  duration2 = pulseIn(echoPin2, HIGH);
  distance2 = duration2 * 0.034 / 2;
  // check if a train is approaching or an animal is near the track
  if (distance1 < 50 || distance2 < 50) {
    // turn on the light and buzzer to scare off animals
    digitalWrite(ledPin, HIGH);
    digitalWrite(buzzerPin, HIGH);
    delay(100);
    digitalWrite(buzzerPin, LOW);
    delay(100);
  }
  else {
    // turn off the light and buzzer
    digitalWrite(ledPin, LOW);
    digitalWrite(buzzerPin, LOW);
  }
  delay(10); // wait for 100 milliseconds before measuring distance again
}
